HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	f8count.gdf
	{
		f8count [] []
		{
			4 [] [];
		}
	}
	lpm_counter.tdf
	{
		lpm_counter [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=OFF,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY,LPM_SVALUE=0,LPM_AVALUE=0,LPM_MODULUS=0,LPM_DIRECTION=DEFAULT,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_constant.inc,lpm_decode.inc,lpm_add_sub.inc,cmpconst.inc,lpm_compare.inc,lpm_counter.inc,dffeea.inc,aglobal.inc]
		{
			3 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=0,LPM_AVALUE=0,LPM_MODULUS=0,LPM_DIRECTION=UP,LPM_WIDTH=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q1,q0,clock,aclr];
		}
	}
	mycount.tdf
	{
		mycount [USE_LPM_FOR_AHDL_OPERATORS] [lpm_counter.inc]
		{
			2 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [q0,q1,aclr,clock];
		}
	}
	reg8bit.vhd
	{
		reg8bit [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			1 [] [];
		}
	}
	alu.gdf
	{
		alu [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	alu::(0,0):(0): alu.gdf
	{
		mycount::(0,0):(5): mycount.tdf
		{
			lpm_counter:3:(50,2):(31,lpm_counter_component): lpm_counter.tdf
			{
				f8count:4:(224,9):(61,p8c0): f8count.gdf;
			}
		}
		reg8bit::(0,0):(4): reg8bit.vhd;
		reg8bit::(0,0):(3): reg8bit.vhd;
		reg8bit::(0,0):(2): reg8bit.vhd;
		reg8bit::(0,0):(1): reg8bit.vhd;
	}
}
